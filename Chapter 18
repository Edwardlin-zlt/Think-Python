import random

class Card(object):
    """Represent a standard playing card"""
    suit_names = ['Clubs', 'Diamond', 'Heart', 'Spades']
    rank_names = [None, 'Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King']

    def __init__(self, suit=0, rank=2):
        self.suit = suit
        self.rank = rank

    def __str__(self):
        return '%s of %s' % (Card.rank_names[self.rank], Card.suit_names[self.suit])

    """
    def __cmp__(self, other):
        #check the suits
        if self.suit > other.suit: 
            return 1
        if self.suit < other.suit: 
            return -1
        
        #suits are the sam... check ranks
        if self.rank > other.rank: 
            return 1
        if self.rank < other.rank: 
            return -1
        
        #ranks are the same... it's a tie
        return 0
    """

    # using tuple to make the codes more concisely

    def __cmp__(self, other):
        t1 = self.suit, self.rank
        t2 = other.suit, other.rank
        return cmp(t1, t2)


class Deck(object):
    """represents a Deck of cards"""
    def __init__(self):
        self.cards = []
        for suit in range(4):
            for rank in range(1, 14):
                card = Card(suit, rank)
                self.cards.append(card)

    def __str__(self):
        res = []
        for card in self.cards:
            res.append(str(card))
        return '\n'.join(res)

    def pop_card(self):
        return self.cards.pop()

    def add_card(self, card):
        self.cards.append(card)

    def shuffle(self):
        random.shuffle(self.cards)

    def move_cards(self, handordeck, num):
        for i in range(num):
            handordeck.add_card(self.pop_card())

    def deal_hands(self, num_hands, num_cards_per_hand):
        hands = []
        for i in range(num_hands):
            hand = Hand()
            deck.move_cards(hand,num_cards_per_hand)
            hands.append(hand)
        return hands

class Hand(Deck):
    """represents a hand of playing cards."""

    def __init__(self, label=''):
        self.cards = []
        self.label =label
if __name__ == '__main__' :
    deck = Deck()
    hands = deck.deal_hands(3, 3)
    i = 0
    for hand in hands:
        i += 1
        print "%s" % i
        print hand
